git init--> marca el inicio de nuestro proyecto, le decimos a GIT que empiece a montorear todos nuestros cambios, solo se utiliza una vez al iniciar git en nuestro proyecto

git status -> muestra el estado de nuestro proyecto

git add---> decimos que archivos estan listo para el siguiente paso(commit)

git commit -m "Mensaje" --> guarda los cambios

git log-> nos devuelve una lista de todos nuestro commits con su respectiva info

git checkout master --> nos lleva al ultimo commit

git reset --> es similar al checkout pero este elimina los commits

git reset --soft --> es el mas simple del git reset, no toca nuestro Working Area (no se mete con nuestro codigo)

git reset --mixed --> este borra el staging area, sin tocar el working area.

git reset --hard--> este borra absolutamente todo lo que hay en el commit y nuestro codigo

git log > commits.txt -> te genera un txt con todos los commits

git help -->documentacion

git help status-->documentacion especifica de status

q:salir del log por ejemplo

git branch --> devuelve la rama existentes, con verde es la rama en la cual estamos

git branch nombrerama --> para crear una rama

git checkout nombrerama --> me muevo de una rama a otra que le pasamos el nombre

git branch -D nombrerama-> borrar una rama

git branch -b --> se mueve de rama pero tambien la crea

Fusiones: es la creacion de un nuevo commit juntando una rama con otra
	*primero posicionarse en la rama de la cual va a absorver los cambios
	*git merge nombrerama(nombre rama deberia ser el nombre de la rama que va a ser absorvdida)-->lo que hace es fusionar

git clone--> sirve para clonar un proyecto

git remote--> vincula nuestro proyecto local, con nuestro proyecto remoto 

git remote add origin <direccion> -->vincula el repo local con el remoto

git remote remove origin --> eliminar vinculacion con un repositorio remoto
	
git remote -v ->repositorios remotos

git push origin master(master seria el nombre de la rama)->manda los cambios al repositorio remoto

Issues: son una forma para continuar, mejorar o solucionar un error en los repositorios

git commit --amend -m "nuevo mensaje" ---> para cambiar el mensaje del commit y luego hay que hacer git push origin master -f para fuerza para que se suban los cambios, porque git reconoce que los commit son iguales, o sea no hay nuevos commit, los commit siguen siendo iguales
git branch -a -> muestra las ramas ocultas, hay que tener en cuenta que existe una rama oculta llamada origin master que es una copia de la rama master
git fetch origin --> envia los cambios a la rama origin/master y que generalmente viene seguido del siguient comando
git merge origin/master->funciona los cambios

Github pages: podemos generar un dominio para un sitio web(solo front end) a partir de nuestros usuarios, como:
1)creamos un repositorio con el siguiente formato, usuario.github.io : FacundoMierez.github.io
2)luego clonamos el proyecto y agregamos los archivos respectivos
3)se sube los archivos y luego te genera el dominio como usuario.github.io : FacundoMierez.github.io
Para un proyecto (probar si es necesario con establecer como organizacion) deberiamos crear el proyecto, luego hay que crear una rama llamada git branch gh-pages, luego clonamos el repo y todos los archivos de nuestro sitio van dentro de esa rama.
